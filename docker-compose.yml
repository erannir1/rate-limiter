version: '3.8'
volumes:
  mongodata: null
  redis:
    driver: local

services:
  mongodb:
    container_name: mongodb
    entrypoint: /usr/bin/mongod --bind_ip_all --replSet replica-set-platform
    environment:
      MONGO_INITDB_DATABASE: platform
    healthcheck:
      interval: 10s
      start_period: 30s
      test: test $$(echo "rs.initiate({plan_id:'replica-set-platform',members:[{plan_id:0,host:\"mongodb:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
    image: mongo:4.4.6
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongodata:/data/db

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  rate-limiter:
    container_name: rate-limiter
    restart: always
    ports:
      - '8000:8000'
    build:
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

    environment:
      DB_CONN_STR: mongodb://mongodb:27017/
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81